name: Deploy to Akash

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: 调试文件路径（可选）
      - name: Debug File Path
        run: |
          echo "Current working directory: $(pwd)"
          echo "Listing files in the current directory:"
          ls -R

      # Step 3: 安装 Akash CLI
      - name: Install Akash CLI
        run: |
          curl -sSL https://github.com/ovrclk/akash/releases/download/v1.0.0-rc10/akash_1.0.0-rc10_linux_amd64.zip -o akash.zip
          if [ ! -s akash.zip ]; then
              echo "Download failed or file is empty."
              exit 1
          fi
          mkdir -p akash-cli
          unzip akash.zip -d akash-cli
          sudo mv akash-cli/akash /usr/local/bin/akash
          sudo chmod +x /usr/local/bin/akash
          akash version

      # Step 4: 恢复 Akash 钱包
      - name: Recover Akash Wallet
        env:
          AKASH_MNEMONIC: ${{ secrets.AKASH_MNEMONIC }}
          AKASH_KEY_NAME: ${{ secrets.AKASH_KEY_NAME }}
          KEYRING_PASSPHRASE: ${{ secrets.KEYRING_PASSPHRASE }}
        run: |
          sudo apt-get update && sudo apt-get install -y expect
          
          # 如果必要，先验证一下环境变量是否存在
          if [ -z "$AKASH_MNEMONIC" ] || [ -z "$AKASH_KEY_NAME" ] || [ -z "$KEYRING_PASSPHRASE" ]; then
            echo "Error: One or more required environment variables (AKASH_MNEMONIC, AKASH_KEY_NAME, KEYRING_PASSPHRASE) are missing."
            exit 1
          fi

          echo "
          spawn akash keys add \"$AKASH_KEY_NAME\" --recover --keyring-backend file
          expect \"Enter your bip39 mnemonic:\"
          send \"$AKASH_MNEMONIC\\r\"
          expect \"Enter keyring passphrase:\"
          send \"$KEYRING_PASSPHRASE\\r\"
          expect \"Re-enter keyring passphrase:\"
          send \"$KEYRING_PASSPHRASE\\r\"
          expect eof
          " > recovery-script.exp
          expect recovery-script.exp

          # 删除临时文件
          rm -f recovery-script.exp

      # Step 5: 调试密钥
      - name: Debug Keys
        run: |
          echo "Listing all keys in Akash CLI:"
          akash keys list

      # Step 6: 部署到 Akash（使用主网 chain-id）
      - name: Deploy to Akash
        env:
          AKASH_KEY_NAME: ${{ secrets.AKASH_KEY_NAME }}
          AKASH_CHAIN_ID: akashnet-2
          # 使用 tcp 协议 + 26657 端口
          AKASH_NODE_URL: tcp://rpc.akash.forbole.com:26657
          KEYRING_PASSPHRASE: ${{ secrets.KEYRING_PASSPHRASE }}
        run: |
          # 同样，先检查必要环境变量
          if [ -z "$AKASH_KEY_NAME" ] || [ -z "$AKASH_CHAIN_ID" ] || [ -z "$KEYRING_PASSPHRASE" ]; then
            echo "Error: One or more required environment variables (AKASH_KEY_NAME, AKASH_CHAIN_ID, KEYRING_PASSPHRASE) are missing."
            exit 1
          fi

          if [ ! -f deploy.yml ]; then
              echo "Error: deploy.yml not found!"
              exit 1
          fi

          # 可选：调试 RPC 节点是否返回正常 JSON
          echo "Testing connectivity to $AKASH_NODE_URL..."
          curl --fail --max-time 10 "$AKASH_NODE_URL/status" || true

          echo "$KEYRING_PASSPHRASE" | akash tx deployment create deploy.yml \
            --from "$AKASH_KEY_NAME" \
            --chain-id "$AKASH_CHAIN_ID" \
            --node "$AKASH_NODE_URL" \
            --gas auto --gas-adjustment 1.25 \
            -y --keyring-backend file --sign-mode direct
