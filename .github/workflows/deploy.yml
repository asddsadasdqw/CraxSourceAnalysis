#!/bin/bash

set -e  # 遇到错误立即退出

# 验证环境变量
echo "验证环境变量..."
if [ -z "$AKASH_KEY_NAME" ]; then
  echo "错误：AKASH_KEY_NAME 未设置或为空"
  exit 1
fi
if [ -z "$KEYRING_PASSPHRASE" ]; then
  echo "错误：KEYRING_PASSPHRASE 未设置或为空"
  exit 1
fi
if [ -z "$AKASH_MNEMONIC" ]; then
  echo "错误：AKASH_MNEMONIC 未设置或为空"
  exit 1
fi

# 清理助记词
CLEANED_MNEMONIC=$(echo "$AKASH_MNEMONIC" | tr -s ' ' | tr -d '\n')
WORD_COUNT=$(echo "$CLEANED_MNEMONIC" | wc -w)
if [ "$WORD_COUNT" -ne 24 ]; then
  echo "错误：助记词的单词数量不正确 (当前数量: $WORD_COUNT)"
  exit 1
fi

# 输出调试信息
echo "密钥名称: $AKASH_KEY_NAME"
echo "清理后的助记词: $CLEANED_MNEMONIC"

# 写入并运行 expect 脚本
echo '#!/usr/bin/expect -f
log_user 1
set timeout 60

if { [info exists ::env(AKASH_KEY_NAME)] == 0 || [info exists ::env(KEYRING_PASSPHRASE)] == 0 || [info exists ::env(AKASH_MNEMONIC)] == 0 } {
    puts "错误：环境变量未正确设置。"
    exit 1
}

spawn akash keys add "$::env(AKASH_KEY_NAME)" --recover --keyring-backend file
expect "Enter keyring passphrase:"
send "$::env(KEYRING_PASSPHRASE)\r"
expect "Re-enter keyring passphrase:"
send "$::env(KEYRING_PASSPHRASE)\r"
expect "Enter your bip39 mnemonic:"
send "$::env(AKASH_MNEMONIC)\r"
expect {
    eof {
        puts "Key 恢复成功！"
    }
    "Error: invalid mnemonic" {
        puts "错误：助记词无效，请检查 AKASH_MNEMONIC 的值。"
        exit 1
    }
    timeout {
        puts "错误：超时，请检查输入是否正确。"
        exit 1
    }
}
' > import_key.exp

chmod +x import_key.exp
./import_key.exp
