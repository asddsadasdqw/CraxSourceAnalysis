name: Deploy to Akash Testnet

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y expect yamllint

      - name: Install Akash CLI
        run: |
          DOWNLOAD_URL="https://github.com/ovrclk/akash/releases/download/v1.0.0-rc10/akash_1.0.0-rc10_linux_amd64.zip"
          curl -sSL "$DOWNLOAD_URL" -o akash.zip
          mkdir -p akash-cli
          unzip akash.zip -d akash-cli
          sudo mv akash-cli/akash /usr/local/bin/akash
          sudo chmod +x /usr/local/bin/akash
          akash version

      - name: Validate mnemonic
        env:
          AKASH_KEY_NAME: ${{ secrets.AKASH_KEY_NAME }}
          KEYRING_PASSPHRASE: ${{ secrets.KEYRING_PASSPHRASE }}
          AKASH_MNEMONIC: ${{ secrets.AKASH_MNEMONIC }}
        run: |
          set -eux

          # 清理助记词
          CLEANED_MNEMONIC=$(echo "$AKASH_MNEMONIC" | tr -s ' ' | tr -d '\n')

          # 验证助记词的单词数量
          WORD_COUNT=$(echo "$CLEANED_MNEMONIC" | wc -w)
          if [ "$WORD_COUNT" -ne 24 ]; then
            echo "错误：助记词的单词数量不正确 (当前数量: $WORD_COUNT)"
            exit 1
          fi

          echo "助记词已验证，准备恢复密钥..."

      - name: Import key from mnemonic
        env:
          AKASH_KEY_NAME: ${{ secrets.AKASH_KEY_NAME }}
          KEYRING_PASSPHRASE: ${{ secrets.KEYRING_PASSPHRASE }}
          AKASH_MNEMONIC: ${{ secrets.AKASH_MNEMONIC }}
        run: |
          set -eux
          CLEANED_MNEMONIC=$(echo "$AKASH_MNEMONIC" | tr -s ' ' | tr -d '\n')
          (echo "$KEYRING_PASSPHRASE"; echo "$KEYRING_PASSPHRASE"; echo "$CLEANED_MNEMONIC") \
            | akash keys add "$AKASH_KEY_NAME" --recover --keyring-backend file || {
              echo "错误：密钥恢复失败，请检查助记词和密码是否正确。"
              exit 1
            }

          echo "密钥恢复成功！"
