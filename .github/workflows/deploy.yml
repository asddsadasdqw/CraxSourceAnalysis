name: Akash Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Install Akash CLI and dependencies
      - name: Install Akash CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y expect unzip
          DOWNLOAD_URL="https://github.com/ovrclk/akash/releases/download/v1.0.0-rc10/akash_1.0.0-rc10_linux_amd64.zip"
          echo "Downloading Akash CLI from $DOWNLOAD_URL"
          curl -sSL "$DOWNLOAD_URL" -o akash.zip
          unzip akash.zip -d akash-cli
          sudo mv akash-cli/akash /usr/local/bin/akash
          sudo chmod +x /usr/local/bin/akash
          echo "Akash CLI installed successfully:"
          akash version

      # Step 3: Register a new Akash Wallet
      - name: Register Akash Wallet
        env:
          KEY_NAME: newkey
          KEY_PASSPHRASE: "qq112233"
        run: |
          echo "Creating a new Akash wallet..."
          (echo "$KEY_PASSPHRASE"; echo "$KEY_PASSPHRASE") | akash keys add "$KEY_NAME" --keyring-backend file
          ADDR=$( (echo "$KEY_PASSPHRASE") | akash keys show "$KEY_NAME" -a --keyring-backend file )
          echo "Wallet registered successfully!"
          echo "Wallet Name: $KEY_NAME"
          echo "Wallet Address: $ADDR"

      # Step 4: Export Wallet Key
      - name: Export Wallet Key
        env:
          KEY_NAME: newkey
          KEY_PASSPHRASE: "qq112233"
        run: |
          echo "Exporting wallet key to encrypted file..."
          echo '#!/usr/bin/expect -f' > export_key.exp
          echo 'set timeout 20' >> export_key.exp
          echo 'spawn akash keys export "$::env(KEY_NAME)" --keyring-backend file' >> export_key.exp
          echo 'expect "Enter keyring passphrase:" { send "$::env(KEY_PASSPHRASE)\\r" }' >> export_key.exp
          echo 'expect eof' >> export_key.exp
          chmod +x export_key.exp
          ls -l export_key.exp  # 检查文件是否正确生成
          ./export_key.exp > key.json
          base64 key.json > key.json.b64
          echo "Key exported and encoded as key.json.b64"

      # Step 5: Upload Key Artifact
      - name: Upload Wallet Key Artifact
        uses: actions/upload-artifact@v3
        with:
          name: akash-wallet-key
          path: key.json.b64
