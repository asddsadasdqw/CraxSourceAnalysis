name: Deploy to Akash Testnet

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      # 第1步：检出代码
      - name: Check out code
        uses: actions/checkout@v3

      # 第2步：安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y expect yamllint

      # 第3步：安装 Akash CLI
      - name: Install Akash CLI
        run: |
          set -eux
          DOWNLOAD_URL="https://github.com/ovrclk/akash/releases/download/v1.0.0-rc10/akash_1.0.0-rc10_linux_amd64.zip"
          curl -sSL "$DOWNLOAD_URL" -o akash.zip
          mkdir -p akash-cli
          unzip akash.zip -d akash-cli
          sudo mv akash-cli/akash /usr/local/bin/akash
          sudo chmod +x /usr/local/bin/akash
          akash version

      # 第4步：验证环境变量
      - name: Validate environment variables
        env:
          AKASH_KEY_NAME: ${{ secrets.AKASH_KEY_NAME }}
          KEYRING_PASSPHRASE: ${{ secrets.KEYRING_PASSPHRASE }}
          AKASH_MNEMONIC: ${{ secrets.AKASH_MNEMONIC }}
        run: |
          set -eux
          echo "验证环境变量..."
          echo "AKASH_KEY_NAME: $AKASH_KEY_NAME"
          echo "KEYRING_PASSPHRASE: 已设置（隐藏实际值）"
          echo "助记词字符长度: ${#AKASH_MNEMONIC}"

      # 第5步：创建并导入密钥
      - name: Create and import key
        env:
          AKASH_KEY_NAME: ${{ secrets.AKASH_KEY_NAME }}
          KEYRING_PASSPHRASE: ${{ secrets.KEYRING_PASSPHRASE }}
          AKASH_MNEMONIC: ${{ secrets.AKASH_MNEMONIC }}
        run: |
          set -eux
          CLEANED_MNEMONIC=$(echo "$AKASH_MNEMONIC" | tr -s ' ' | tr -d '\n')
          echo "清理后的助记词: $CLEANED_MNEMONIC"

          # 验证助记词的单词数量
          WORD_COUNT=$(echo "$CLEANED_MNEMONIC" | wc -w)
          if [ "$WORD_COUNT" -ne 24 ]; then
            echo "错误：助记词的单词数量不正确 (当前数量: $WORD_COUNT)"
            exit 1
          fi

          # 恢复密钥
          (echo "$KEYRING_PASSPHRASE"; echo "$KEYRING_PASSPHRASE"; echo "$CLEANED_MNEMONIC") \
            | akash keys add "$AKASH_KEY_NAME" --recover --keyring-backend file || {
              echo "错误：密钥恢复失败，请检查助记词和密码是否正确。"
              exit 1
            }

          echo "密钥创建并导入成功！"
