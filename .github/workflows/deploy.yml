name: Deploy to Akash Testnet

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y expect yamllint

      - name: Install Akash CLI
        run: |
          set -eux
          DOWNLOAD_URL="https://github.com/ovrclk/akash/releases/download/v1.0.0-rc10/akash_1.0.0-rc10_linux_amd64.zip"
          curl -sSL "$DOWNLOAD_URL" -o akash.zip
          mkdir -p akash-cli
          unzip akash.zip -d akash-cli
          sudo mv akash-cli/akash /usr/local/bin/akash
          sudo chmod +x /usr/local/bin/akash
          echo "Akash CLI installed successfully:"
          akash version

      - name: Import key using Expect script
        env:
          AKASH_KEY_NAME: "${{ secrets.AKASH_KEY_NAME }}"
          KEYRING_PASSPHRASE: "${{ secrets.KEYRING_PASSPHRASE }}"
          AKASH_MNEMONIC: "${{ secrets.AKASH_MNEMONIC }}"
        run: |
          set -eux
          echo "清理助记词..."
          CLEANED_MNEMONIC=$(echo "$AKASH_MNEMONIC" | tr -s ' ' | tr -d '\n')

          # 验证助记词单词数量
          WORD_COUNT=$(echo "$CLEANED_MNEMONIC" | wc -w)
          if [ "$WORD_COUNT" -ne 24 ]; then
            echo "错误：助记词的单词数量不正确 (当前数量: $WORD_COUNT)"
            exit 1
          fi

          echo "写入 Expect 脚本用于恢复密钥..."
          cat <<EOF > import_key.exp
          #!/usr/bin/expect -f
          log_user 1
          set timeout 60

          if { [info exists ::env(AKASH_KEY_NAME)] == 0 || [info exists ::env(KEYRING_PASSPHRASE)] == 0 || [info exists ::env(AKASH_MNEMONIC)] == 0 } {
              puts "错误：环境变量未正确设置。"
              exit 1
          }

          spawn akash keys add "$::env(AKASH_KEY_NAME)" --recover --keyring-backend file
          expect "Enter keyring passphrase:"
          send "$::env(KEYRING_PASSPHRASE)\r"
          expect "Re-enter keyring passphrase:"
          send "$::env(KEYRING_PASSPHRASE)\r"
          expect "Enter your bip39 mnemonic:"
          send "$::env(AKASH_MNEMONIC)\r"
          expect {
              eof {
                  puts "密钥恢复成功！"
                  exit 0
              }
              "Error: invalid mnemonic" {
                  puts "错误：助记词无效，请检查 AKASH_MNEMONIC 的值。"
                  exit 1
              }
              timeout {
                  puts "错误：超时，请检查输入是否正确。"
                  exit 1
              }
          }
          EOF

          chmod +x import_key.exp
          ./import_key.exp
