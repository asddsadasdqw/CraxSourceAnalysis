name: Deploy to Akash Testnet

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      #################################################################
      # （A）检查出代码
      #################################################################
      - name: Check out code
        uses: actions/checkout@v3

      #################################################################
      # （B）可选：调试文件目录
      #################################################################
      - name: Debug File Path
        run: |
          echo "Current working directory: $(pwd)"
          echo "Listing files in the current directory:"
          ls -R

      #################################################################
      # （C）安装 Akash CLI
      # 文档参考：
      # https://docs.akash.network/run/cli
      #################################################################
      - name: Install Akash CLI
        run: |
          curl -sSL https://github.com/ovrclk/akash/releases/download/v1.0.0-rc10/akash_1.0.0-rc10_linux_amd64.zip -o akash.zip
          if [ ! -s akash.zip ]; then
              echo "Download failed or file is empty."
              exit 1
          fi
          mkdir -p akash-cli
          unzip akash.zip -d akash-cli
          sudo mv akash-cli/akash /usr/local/bin/akash
          sudo chmod +x /usr/local/bin/akash
          akash version

      #################################################################
      # （D）恢复 Akash 钱包
      #
      # - 需要在 GitHub Secrets 中配置:
      #     AKASH_MNEMONIC, AKASH_KEY_NAME, KEYRING_PASSPHRASE
      #
      # - 若你还没在本地网络（Testnet / Mainnet）创建过该地址，
      #   或者还没在 Testnet faucet 中领取到足够币，就会报 "account not found"。
      #
      #   在 Testnet 下，你可访问官方水龙头：https://akash-network.test-faucet.link
      #   输入 “akash1xxxxx” 开头的地址领取测试代币。
      #
      # - 文档参考：
      #   https://docs.akash.network/run/node/keys (官方 Keys 相关)
      #################################################################
      - name: Recover Akash Wallet
        env:
          AKASH_MNEMONIC: ${{ secrets.AKASH_MNEMONIC }}
          AKASH_KEY_NAME: ${{ secrets.AKASH_KEY_NAME }}
          KEYRING_PASSPHRASE: ${{ secrets.KEYRING_PASSPHRASE }}
        run: |
          sudo apt-get update && sudo apt-get install -y expect
          
          if [ -z "$AKASH_MNEMONIC" ] || [ -z "$AKASH_KEY_NAME" ] || [ -z "$KEYRING_PASSPHRASE" ]; then
            echo "Error: One or more required environment variables are missing."
            exit 1
          fi

          echo "
          spawn akash keys add \"$AKASH_KEY_NAME\" --recover --keyring-backend file
          expect \"Enter your bip39 mnemonic:\"
          send \"$AKASH_MNEMONIC\\r\"
          expect \"Enter keyring passphrase:\"
          send \"$KEYRING_PASSPHRASE\\r\"
          expect \"Re-enter keyring passphrase:\"
          send \"$KEYRING_PASSPHRASE\\r\"
          expect eof
          " > recovery-script.exp
          expect recovery-script.exp
          rm -f recovery-script.exp

      #################################################################
      # （E）创建证书 (如果没有就创建，有的话就无视报错)
      #
      # 证书是向链上提交的，若账号上没足够余额，也会失败。
      #
      # 文档参考：
      #   https://docs.akash.network/run/node/certificates
      #################################################################
      - name: Create Akash Certificate
        env:
          AKASH_KEY_NAME: ${{ secrets.AKASH_KEY_NAME }}
          KEYRING_PASSPHRASE: ${{ secrets.KEYRING_PASSPHRASE }}
          AKASH_CHAIN_ID: sandbox-01
          AKASH_NODE_URL: http://rpc.sandbox-01.aksh.pw:26657
        run: |
          # 若已存在同名证书，不要报错退出
          echo "$KEYRING_PASSPHRASE" | akash tx cert create client \
            --chain-id "$AKASH_CHAIN_ID" \
            --node "$AKASH_NODE_URL" \
            --from "$AKASH_KEY_NAME" \
            --keyring-backend file \
            --sign-mode direct \
            -y || true

      #################################################################
      # （F）可选：调试 Keys
      #
      #   可以查看“akash keys list”输出的地址
      #   然后拿这个地址去 Testnet Faucet 领币
      #################################################################
      - name: Debug Keys
        run: |
          echo "Listing all keys in Akash CLI:"
          akash keys list

      #################################################################
      # （G）部署到 Testnet
      #
      # - SDL 文件需要命名为 deploy.yml 并放在仓库根目录
      # - account not found 解决方案：
      #    1. 确保你的地址真的在 sandbox-01 上
      #    2. 并且 faucet 中领取过0.5AKT以上测试代币
      #
      # - 官方 CLI 文档：
      #   https://docs.akash.network/running-an-akash-node/node-setup
      #   https://docs.akash.network/run/cli
      #################################################################
      - name: Deploy to Testnet
        env:
          AKASH_KEY_NAME: ${{ secrets.AKASH_KEY_NAME }}
          KEYRING_PASSPHRASE: ${{ secrets.KEYRING_PASSPHRASE }}
          AKASH_CHAIN_ID: sandbox-01
          AKASH_NODE_URL: http://rpc.sandbox-01.aksh.pw:26657
        run: |
          # 先检查必要环境变量
          if [ -z "$AKASH_KEY_NAME" ] || [ -z "$AKASH_CHAIN_ID" ] || [ -z "$AKASH_NODE_URL" ]; then
            echo "Error: Missing env variables for deployment"
            exit 1
          fi
          
          if [ ! -f deploy.yml ]; then
              echo "Error: deploy.yml not found in repo root!"
              exit 1
          fi

          echo "Testing connectivity to $AKASH_NODE_URL..."
          curl --fail --max-time 10 "$AKASH_NODE_URL/status"

          echo "Sending deployment transaction..."
          # 如果地址在链上没记录，就会报 account not found
          echo "$KEYRING_PASSPHRASE" | akash tx deployment create deploy.yml \
            --from "$AKASH_KEY_NAME" \
            --chain-id "$AKASH_CHAIN_ID" \
            --node "$AKASH_NODE_URL" \
            --gas auto --gas-adjustment 1.25 \
            -y --keyring-backend file --sign-mode direct

          echo "Deployment transaction sent."
