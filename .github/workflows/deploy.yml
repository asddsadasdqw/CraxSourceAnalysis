name: Deploy to Akash Testnet

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y expect yamllint

      - name: 安装 Akash CLI
        run: |
          curl -sSL https://github.com/ovrclk/akash/releases/download/v1.0.0-rc10/akash_1.0.0-rc10_linux_amd64.zip -o akash.zip
          if [ ! -s akash.zip ]; then
              echo "下载失败或文件为空。"
              exit 1
          fi
          mkdir -p akash-cli
          unzip akash.zip -d akash-cli
          sudo mv akash-cli/akash /usr/local/bin/akash
          sudo chmod +x /usr/local/bin/akash

          akash version

      - name: 创建密钥并导出为 JSON
        env:
          AKASH_KEY_NAME: my-new-key
          KEYRING_PASSPHRASE: "your-secure-password"
        run: |
          echo "AKASH_KEY_NAME: $AKASH_KEY_NAME"
          if [ -z "$KEYRING_PASSPHRASE" ]; then
            echo "错误：KEYRING_PASSPHRASE 未设置或为空"
            exit 1
          fi
          echo "密码长度为 ${#KEYRING_PASSPHRASE} 个字符"

          if akash keys show "$AKASH_KEY_NAME" --keyring-backend file &>/dev/null; then
            echo "密钥 $AKASH_KEY_NAME 已存在，无需重复创建。"
          else
            echo "创建新的密钥：$AKASH_KEY_NAME"
            if ! echo "$KEYRING_PASSPHRASE" | akash keys add "$AKASH_KEY_NAME" --keyring-backend file; then
              echo "错误：密码验证失败或密钥创建失败，请检查 KEYRING_PASSPHRASE 是否正确。"
              exit 1
            fi
          fi

          echo "导出密钥内容为 JSON 文件"
          if ! echo "$KEYRING_PASSPHRASE" | akash keys export "$AKASH_KEY_NAME" --keyring-backend file --output json > my-new-key.json; then
            echo "错误：密钥导出失败"
            exit 1
          fi

          KEY_FILE_CONTENT=$(cat my-new-key.json | base64)
          echo "::set-output name=key_file_content::$KEY_FILE_CONTENT"
