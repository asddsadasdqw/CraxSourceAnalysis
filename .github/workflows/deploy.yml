name: Deploy to Akash Testnet

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y expect yamllint

      - name: 安装 Akash CLI
        run: |
          curl -sSL https://github.com/ovrclk/akash/releases/download/v1.0.0-rc10/akash_1.0.0-rc10_linux_amd64.zip -o akash.zip
          if [ ! -s akash.zip ]; then
              echo "下载失败或文件为空。"
              exit 1
          fi
          mkdir -p akash-cli
          unzip akash.zip -d akash-cli
          sudo mv akash-cli/akash /usr/local/bin/akash
          sudo chmod +x /usr/local/bin/akash

          akash version

      - name: 生成新的 Akash 密钥
        env:
          KEYRING_PASSPHRASE: "your-secure-password" # 可设置为 GitHub Secret
        run: |
          # 创建一个新的密钥
          echo "创建新的密钥 my-new-key"
          echo "$KEYRING_PASSPHRASE" | akash keys add my-new-key --keyring-backend file

          # 导出密钥信息
          echo "导出密钥内容为 JSON 文件"
          echo "$KEYRING_PASSPHRASE" | akash keys export my-new-key --keyring-backend file --output json > my-new-key.json

          # 输出密钥内容供后续步骤使用
          echo "::set-output name=key_file_content::$(cat my-new-key.json | base64)"

      - name: 将密钥内容打印到日志 (仅调试用途，不推荐生产中使用)
        run: |
          echo "显示密钥内容（调试用途）"
          echo "${{ steps.generate-key.outputs.key_file_content }}" | base64 --decode | jq

      - name: 使用密钥部署或导入到其他环境
        env:
          AKASH_KEY_FILE_CONTENT: "${{ steps.generate-key.outputs.key_file_content }}"
        run: |
          echo "导入密钥以供部署使用"
          echo "$AKASH_KEY_FILE_CONTENT" | base64 --decode > imported-key.json
          echo "导入成功"
